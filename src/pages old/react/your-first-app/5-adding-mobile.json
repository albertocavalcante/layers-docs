{
  "path": "/docs/react/your-first-app/5-adding-mobile",
  "previousText": "Loading Photos on Filesystem",
  "previousUrl": "/docs/react/your-first-app/4-loading-photos",
  "nextText": "Deploying Mobile",
  "nextUrl": "/docs/react/your-first-app/6-deploying-mobile",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "Our photo gallery app won’t be complete until it runs on iOS, Android, and the web - all using one codebase. All it takes is some small logic changes to support mobile platforms, installing some native tooling, then running the app on a device. Let’s go!"
    ],
    " ",
    [
      "p",
      {
        "class": "intro"
      },
      "Let’s start with making some small code changes - then our app will “just work” when we deploy it to a device."
    ],
    " ",
    [
      "h2",
      {
        "id": "platform-specific-logic"
      },
      " ",
      [
        "a",
        {
          "href": "#platform-specific-logic"
        },
        "Platform-specific Logic"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "First, we’ll update the photo saving functionality to support mobile. In the ",
      [
        "code",
        null,
        "savePicture"
      ],
      " function, check which platform the app is running on. If it’s “hybrid” (Capacitor or Cordova, the two native runtimes), then read the photo file into base64 format using the ",
      [
        "code",
        null,
        "readFile"
      ],
      " method. Also, return the complete file path to the photo using the Filesystem API. When setting the ",
      [
        "code",
        null,
        "webviewPath"
      ],
      ", use the special ",
      [
        "code",
        null,
        "Capacitor.convertFileSrc"
      ],
      " method (",
      [
        "a",
        {
          "href": "https://ionicframework.com/docs/core-concepts/webview#file-protocol"
        },
        "details here"
      ],
      "). Otherwise, use the same logic as before when running the app on the web."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " savePicture ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photo",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " CameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " fileName",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "string"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "Promise"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "<"
          ],
          "Photo",
          [
            "span",
            {
              "class": "token operator"
            },
            ">"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "let"
          ],
          " base64Data",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "string"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// \"hybrid\" will detect Cordova or Capacitor;"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "isPlatform"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " file ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "readFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "path",
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    base64Data ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " file",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "data",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "else"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    base64Data ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "base64FromPath"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "webPath",
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " savedFile ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "writeFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " fileName",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    data",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " base64Data",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    directory",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " FilesystemDirectory",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Data\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "isPlatform"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Display the new image by rewriting the 'file://' path to HTTP"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Details: https://ionicframework.com/docs/building/webview#file-protocol"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      filepath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " savedFile",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "uri",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n      webviewPath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " Capacitor",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "convertFileSrc"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "savedFile",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "uri",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "else"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Use webPath to display the new image instead of base64 since it's"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// already loaded into memory"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      filepath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " fileName",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n      webviewPath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "webPath\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Next, add a new bit of logic in the ",
      [
        "code",
        null,
        "loadSaved"
      ],
      " function. On mobile, we can directly point to each photo file on the Filesystem and display them automatically. On the web, however, we must read each image from the Filesystem into base64 format, using a new ",
      [
        "code",
        null,
        "base64"
      ],
      " property on the ",
      [
        "code",
        null,
        "Photo"
      ],
      " object. This is because the Filesystem API uses ",
      [
        "a",
        {
          "href": "https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"
        },
        "IndexedDB"
      ],
      " under the hood. Update the ",
      [
        "code",
        null,
        "loadSaved"
      ],
      " function inside of ",
      [
        "code",
        null,
        "useEffect"
      ],
      " to:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " ",
          [
            "span",
            {
              "class": "token function-variable function"
            },
            "loadSaved"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photosString ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "get"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'photos'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photosInStorage ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photosString ",
          [
            "span",
            {
              "class": "token operator"
            },
            "?"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "parse"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photosString",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "as"
          ],
          " Photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// If running on the web..."
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "isPlatform"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "let"
          ],
          " photo ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "of"
          ],
          " photosInStorage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " file ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "readFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n        path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "filepath",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n        directory",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " FilesystemDirectory",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Data\n      ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Web platform only: Save the photo into the base64 field"
          ],
          "\n      photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "base64 ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token template-string"
            },
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "data:image/jpeg;base64,"
            ],
            [
              "span",
              {
                "class": "token interpolation"
              },
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "${"
              ],
              "file",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "."
              ],
              "data",
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "}"
              ]
            ],
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ]
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token function"
            },
            "setPhotos"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photosInStorage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "At the bottom of the ",
      [
        "code",
        null,
        "takePhoto"
      ],
      " function, update the Storage API ",
      [
        "code",
        null,
        "set"
      ],
      " logic. If running on the web, there’s a slight optimization we can add. Even though we must read the photo data in base64 format in order to display it, there’s no need to save in that form, since it’s already saved on the Filesystem. Update the call to ",
      [
        "code",
        null,
        "set"
      ],
      " to the following:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "set"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token function"
            },
            "isPlatform"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token operator"
            },
            "?"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "stringify"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "newPhotos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "stringify"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "newPhotos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "map"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "p"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Don't save the base64 representation of the photo data,"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// since it's already saved on the Filesystem"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photoCopy ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          "p ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "delete"
          ],
          " photoCopy",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "base64",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " photoCopy",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Our Photo Gallery now consists of one codebase that runs on the web, Android, and iOS. Next up, the part you’ve been waiting for - deploying the app to a device."
    ]
  ],
  "title": "Adding Mobile",
  "headings": [
    {
      "text": "Platform-specific Logic",
      "href": "#platform-specific-logic"
    }
  ],
  "pageClass": "page-react-your-first-app-5-adding-mobile"
}
