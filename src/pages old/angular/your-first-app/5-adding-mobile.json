{
  "path": "/docs/angular/your-first-app/5-adding-mobile",
  "previousText": "Loading Photos on Filesystem",
  "previousUrl": "/docs/angular/your-first-app/4-loading-photos",
  "nextText": "Deploying Mobile",
  "nextUrl": "/docs/angular/your-first-app/6-deploying-mobile",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "Our photo gallery app won’t be complete until it runs on iOS, Android, and the web - all using one codebase. All it takes is some small logic changes to support mobile platforms, installing some native tooling, then running the app on a device. Let’s go!"
    ],
    " ",
    [
      "h2",
      {
        "id": "import-platform-api"
      },
      " ",
      [
        "a",
        {
          "href": "#import-platform-api"
        },
        "Import Platform API"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Let’s start with making some small code changes - then our app will “just work” when we deploy it to a device."
    ],
    " ",
    [
      "p",
      null,
      "Import the Ionic ",
      [
        "a",
        {
          "href": "https://ionicframework.com/docs/angular/platform"
        },
        "Platform API"
      ],
      " into ",
      [
        "code",
        null,
        "photo.service.ts"
      ],
      ", which is used to retrieve information about the current device. In this case, it’s useful for selecting which code to execute based on the platform the app is running on (web or mobile):"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " Platform ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@ionic/angular'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "export"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "PhotoService"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "public"
          ],
          " photos",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " Photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "string"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "\"photos\""
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " platform",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " Platform",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "platform",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " Platform"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "platform ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " platform",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// other code"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h2",
      {
        "id": "platform-specific-logic"
      },
      " ",
      [
        "a",
        {
          "href": "#platform-specific-logic"
        },
        "Platform-specific Logic"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "First, we’ll update the photo saving functionality to support mobile. In the ",
      [
        "code",
        null,
        "readAsBase64()"
      ],
      " function, check which platform the app is running on. If it’s “hybrid” (Capacitor or Cordova, two native runtimes), then read the photo file into base64 format using the Filesystem ",
      [
        "code",
        null,
        "readFile()"
      ],
      " method. Otherwise, use the same logic as before when running the app on the web:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "readAsBase64"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "cameraPhoto",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " CameraPhoto"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// \"hybrid\" will detect Cordova or Capacitor"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "platform",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "is"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Read the file into base64 format"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " file ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Filesystem",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "readFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "path\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " file",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "data",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "else"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Fetch the photo, read as a blob, then convert to base64 format"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " response ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "fetch"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "webPath",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " blob ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " response",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "blob"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "convertBlobToBase64"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "blob",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "as"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "string"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Next, update the ",
      [
        "code",
        null,
        "savePicture()"
      ],
      " method. When running on mobile, set ",
      [
        "code",
        null,
        "filepath"
      ],
      " to the result of the ",
      [
        "code",
        null,
        "writeFile()"
      ],
      " operation - ",
      [
        "code",
        null,
        "savedFile.uri"
      ],
      ". When setting the ",
      [
        "code",
        null,
        "webviewPath"
      ],
      ", use the special ",
      [
        "code",
        null,
        "Capacitor.convertFileSrc()"
      ],
      " method (",
      [
        "a",
        {
          "href": "https://ionicframework.com/docs/core-concepts/webview#file-protocol"
        },
        "details here"
      ],
      ")."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token comment"
            },
            "// Save picture to file on device"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "savePicture"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "cameraPhoto",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " CameraPhoto"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Convert photo to base64 format, required by Filesystem API to save"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " base64Data ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "readAsBase64"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Write the file to the data directory"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " fileName ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "new"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "Date"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "getTime"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'.jpeg'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " savedFile ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Filesystem",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "writeFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " fileName",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n      data",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " base64Data",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n      directory",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " FilesystemDirectory",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Data\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "platform",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "is"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Display the new image by rewriting the 'file://' path to HTTP"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Details: https://ionicframework.com/docs/building/webview#file-protocol"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n        filepath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " savedFile",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "uri",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n        webviewPath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " Capacitor",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "convertFileSrc"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "savedFile",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "uri",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "else"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Use webPath to display the new image instead of base64 since it's"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// already loaded into memory"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n        filepath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " fileName",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n        webviewPath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "webPath\n      ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Next, head back over to the ",
      [
        "code",
        null,
        "loadSaved()"
      ],
      " function we implemented for the web earlier. On mobile, we can directly set the source of an image tag - ",
      [
        "code",
        null,
        "<img src=”x” />"
      ],
      " - to each photo file on the Filesystem, displaying them automatically. Thus, only the web requires reading each image from the Filesystem into base64 format. Update this function to add an ",
      [
        "em",
        null,
        "if statement"
      ],
      " around the Filesystem code:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "public"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "loadSaved"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Retrieve cached photo array data"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photos ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Storage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "get"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " key",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "parse"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "value",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "||"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Easiest way to detect when running on the web:"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// “when the platform is NOT hybrid, do this”"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "platform",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "is"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Display the photo by reading into base64 format"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "let"
          ],
          " photo ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "of"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Read each saved photo's data from the Filesystem"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " readFile ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Filesystem",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "readFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n          path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "filepath",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n          directory",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " FilesystemDirectory",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Data\n      ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n      ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Web platform only: Save the photo into the base64 field"
          ],
          "\n      photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "base64 ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token template-string"
            },
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "data:image/jpeg;base64,"
            ],
            [
              "span",
              {
                "class": "token interpolation"
              },
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "${"
              ],
              "readFile",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "."
              ],
              "data",
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "}"
              ]
            ],
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ]
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "At the bottom of the ",
      [
        "code",
        null,
        "addNewtoGallery()"
      ],
      " function, update the Storage API logic. If running on the web, there’s a slight optimization we can add. Even though we must read the photo data in base64 format in order to display it, there’s no need to save in that form, since it’s already saved on the Filesystem:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "Storage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "set"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  key",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  value",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "platform",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "is"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'hybrid'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token operator"
            },
            "?"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "stringify"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "stringify"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "map"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "p"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n            ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Don't save the base64 representation of the photo data,"
          ],
          "\n            ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// since it's already saved on the Filesystem"
          ],
          "\n            ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photoCopy ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          "p ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n            ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "delete"
          ],
          " photoCopy",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "base64",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n            ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " photoCopy",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n        ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Finally, a small change to ",
      [
        "code",
        null,
        "tab2.page.html"
      ],
      " is required to support both web and mobile. If running the app on the web, the ",
      [
        "code",
        null,
        "base64"
      ],
      " property will contain the photo data to display. If on mobile, the ",
      [
        "code",
        null,
        "webviewPath"
      ],
      " will be used:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "html"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "<"
              ],
              "ion-col"
            ],
            " ",
            [
              "span",
              {
                "class": "token attr-name"
              },
              "size"
            ],
            [
              "span",
              {
                "class": "token attr-value"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "="
              ],
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ],
              "6",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ]
            ],
            "\n    ",
            [
              "span",
              {
                "class": "token attr-name"
              },
              "*ngFor"
            ],
            [
              "span",
              {
                "class": "token attr-value"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "="
              ],
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ],
              "let photo of photoService.photos; index as position",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ]
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "<"
              ],
              "ion-img"
            ],
            " ",
            [
              "span",
              {
                "class": "token attr-name"
              },
              "src"
            ],
            [
              "span",
              {
                "class": "token attr-value"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "="
              ],
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ],
              "{{ photo.base64 ? photo.base64 : photo.webviewPath }}",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ]
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "</"
              ],
              "ion-img"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ],
          "\n",
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "</"
              ],
              "ion-col"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Our Photo Gallery now consists of one codebase that runs on the web, Android, and iOS. Next up, the part you’ve been waiting for - deploying the app to a device."
    ]
  ],
  "title": "Adding Mobile",
  "headings": [
    {
      "text": "Import Platform API",
      "href": "#import-platform-api"
    },
    {
      "text": "Platform-specific Logic",
      "href": "#platform-specific-logic"
    }
  ],
  "pageClass": "page-angular-your-first-app-5-adding-mobile"
}
