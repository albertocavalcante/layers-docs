{
  "path": "/docs/angular/your-first-app/3-saving-photos",
  "previousText": "Taking Photos",
  "previousUrl": "/docs/angular/your-first-app/2-taking-photos",
  "nextText": "Loading Photos on Filesystem",
  "nextUrl": "/docs/angular/your-first-app/4-loading-photos",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "Weâ€™re now able to take multiple photos and display them in a photo gallery on the second tab of our app. These photos, however, are not currently being stored permanently, so when the app is closed, they will be deleted."
    ],
    " ",
    [
      "h2",
      {
        "id": "filesystem-api"
      },
      " ",
      [
        "a",
        {
          "href": "#filesystem-api"
        },
        "Filesystem API"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Fortunately, saving them to the filesystem only takes a few steps. Begin by creating a new function, ",
      [
        "code",
        null,
        "savePicture()"
      ],
      ", in the ",
      [
        "code",
        null,
        "PhotoService"
      ],
      " class (",
      [
        "code",
        null,
        "src/app/services/photo.service.ts"
      ],
      "). We pass in the ",
      [
        "code",
        null,
        "cameraPhoto"
      ],
      " object, which represents the newly captured device photo:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "savePicture"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "cameraPhoto",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " CameraPhoto"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "We can use this new function immediately in ",
      [
        "code",
        null,
        "addNewToGallery()"
      ],
      ":"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "public"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "addNewToGallery"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Take a photo"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " capturedPhoto ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Camera",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "getPhoto"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    resultType",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " CameraResultType",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Uri",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// file-based data; provides best performance"
          ],
          "\n    source",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " CameraSource",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Camera",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// automatically take a new photo with the camera"
          ],
          "\n    quality",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token number"
            },
            "100"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// highest quality (0 to 100)"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Save the picture and add it to photo collection"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " savedImageFile ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "savePicture"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "capturedPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "unshift"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "savedImageFile",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Weâ€™ll use the Capacitor ",
      [
        "a",
        {
          "href": "https://capacitor.ionicframework.com/docs/apis/filesystem"
        },
        "Filesystem API"
      ],
      " to save the photo to the filesystem. To start, convert the photo to base64 format, then feed the data to the Filesystemâ€™s ",
      [
        "code",
        null,
        "writeFile"
      ],
      " function. As youâ€™ll recall, we display each photo on the screen by setting each imageâ€™s source path (",
      [
        "code",
        null,
        "src"
      ],
      " attribute) in ",
      [
        "code",
        null,
        "tab2.page.html"
      ],
      " to the webviewPath property. So, set it then return the new Photo object."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "savePicture"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "cameraPhoto",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " CameraPhoto"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Convert photo to base64 format, required by Filesystem API to save"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " base64Data ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "readAsBase64"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Write the file to the data directory"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " fileName ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "new"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "Date"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "getTime"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'.jpeg'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " savedFile ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Filesystem",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "writeFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " fileName",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    data",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " base64Data",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    directory",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " FilesystemDirectory",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Data\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Use webPath to display the new image instead of base64 since it's"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// already loaded into memory"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    filepath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " fileName",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    webviewPath",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "webPath\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "code",
        null,
        "readAsBase64()"
      ],
      " is a helper function weâ€™ll define next. It's useful to organize via a separate method since it requires a small amount of platform-specific (web vs. mobile) logic - more on that in a bit. For now, implement the logic for running on the web:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "readAsBase64"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "cameraPhoto",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " CameraPhoto"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Fetch the photo, read as a blob, then convert to base64 format"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " response ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "fetch"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "cameraPhoto",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "webPath",
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " blob ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " response",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "blob"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "convertBlobToBase64"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "blob",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "as"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "string"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "  \n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token function-variable function"
            },
            "convertBlobToBase64"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "blob",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " Blob"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "new"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "Promise"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "resolve",
            [
              "span",
              {
                "class": "token punctuation"
              },
              ","
            ],
            " reject"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " reader ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "new"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "FileReader"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  reader",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "onerror ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " reject",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  reader",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function-variable function"
            },
            "onload"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token function"
            },
            "resolve"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "reader",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "result",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  reader",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "readAsDataURL"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "blob",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Obtaining the camera photo as base64 format on the web appears to be a bit trickier than on mobile. In reality, weâ€™re just using built-in web APIs: ",
      [
        "a",
        {
          "href": "https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"
        },
        "fetch()"
      ],
      " as a neat way to read the file into blob format, then FileReaderâ€™s ",
      [
        "a",
        {
          "href": "https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"
        },
        "readAsDataURL()"
      ],
      " to convert the photo blob to base64."
    ],
    " ",
    [
      "p",
      null,
      "Finally, change the way pictures become visible in the template file ",
      [
        "code",
        null,
        "tab2.page.html"
      ],
      "."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "html"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "<"
              ],
              "ion-img"
            ],
            " ",
            [
              "span",
              {
                "class": "token attr-name"
              },
              "src"
            ],
            [
              "span",
              {
                "class": "token attr-value"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "="
              ],
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ],
              "{{ photo.base64 ? photo.base64 : photo.webviewPath }}",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ]
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ],
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "</"
              ],
              "ion-img"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "There we go! Each time a new photo is taken, itâ€™s now automatically saved to the filesystem."
    ]
  ],
  "title": "Saving Photos to the Filesystem",
  "headings": [
    {
      "text": "Filesystem API",
      "href": "#filesystem-api"
    }
  ],
  "pageClass": "page-angular-your-first-app-3-saving-photos"
}
