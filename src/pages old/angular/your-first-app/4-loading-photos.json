{
  "path": "/docs/angular/your-first-app/4-loading-photos",
  "previousText": "Saving Photos on Filesystem",
  "previousUrl": "/docs/angular/your-first-app/3-saving-photos",
  "nextText": "Adding Mobile",
  "nextUrl": "/docs/angular/your-first-app/5-adding-mobile",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "We’ve implemented photo taking and saving to the filesystem. There’s one last piece of functionality missing: the photos are stored in the filesystem, but we need a way to save pointers to each file so that they can be displayed again in the photo gallery."
    ],
    " ",
    [
      "p",
      {
        "class": "intro"
      },
      "Fortunately, this is easy: we’ll leverage the Capacitor ",
      [
        "a",
        {
          "href": "https://capacitor.ionicframework.com/docs/apis/storage"
        },
        "Storage API"
      ],
      " to store our array of Photos in a key-value store. "
    ],
    " ",
    [
      "h2",
      {
        "id": "storage-api"
      },
      " ",
      [
        "a",
        {
          "href": "#storage-api"
        },
        "Storage API"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Begin by defining a constant variable that will act as the key for the store:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "export"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "PhotoService"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "public"
          ],
          " photos",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " Photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "private"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "string"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "\"photos\""
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// other code"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Next, at the end of the ",
      [
        "code",
        null,
        "addNewToGallery"
      ],
      " function, add a call to ",
      [
        "code",
        null,
        "Storage.set()"
      ],
      " to save the Photos array. By adding it here, the Photos array is stored each time a new photo is taken. This way, it doesn’t matter when the app user closes or switches to a different app - all photo data is saved."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "Storage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "set"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  key",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  value",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "stringify"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "map"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "p"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Don't save the base64 representation of the photo data, "
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// since it's already saved on the Filesystem"
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photoCopy ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          "p ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "delete"
          ],
          " photoCopy",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "base64",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n          ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "return"
          ],
          " photoCopy",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n          ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "With the photo array data saved, create a function called ",
      [
        "code",
        null,
        "loadSaved()"
      ],
      " that can retrieve that data. We use the same key to retrieve the photos array in JSON format, then parse it into an array:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "public"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "async"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "loadSaved"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Retrieve cached photo array data"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " photos ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Storage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "get"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " key",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token constant"
            },
            "PHOTO_STORAGE"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token constant"
            },
            "JSON"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "parse"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "value",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "||"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// more to come..."
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "On mobile (coming up next!), we can directly set the source of an image tag - ",
      [
        "code",
        null,
        "<img src=”x” />"
      ],
      " - to each photo file on the Filesystem, displaying them automatically. On the web, however, we must read each image from the Filesystem into base64 format, using a new ",
      [
        "code",
        null,
        "base64"
      ],
      " property on the ",
      [
        "code",
        null,
        "Photo"
      ],
      " object. This is because the Filesystem API uses ",
      [
        "a",
        {
          "href": "https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"
        },
        "IndexedDB"
      ],
      " under the hood. Below the code you just added in the ",
      [
        "code",
        null,
        "loadSaved()"
      ],
      " function, add:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token comment"
            },
            "// Display the photo by reading into base64 format"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "let"
          ],
          " photo ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "of"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photos",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Read each saved photo's data from the Filesystem"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "const"
          ],
          " readFile ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "await"
          ],
          " Filesystem",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "readFile"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      path",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "filepath",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n      directory",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " FilesystemDirectory",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "Data\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Web platform only: Save the photo into the base64 field"
          ],
          "\n  photo",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "base64 ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token template-string"
            },
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "data:image/jpeg;base64,"
            ],
            [
              "span",
              {
                "class": "token interpolation"
              },
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "${"
              ],
              "readFile",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "."
              ],
              "data",
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "}"
              ]
            ],
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ]
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "After, call this new method in ",
      [
        "code",
        null,
        "tab2.page.ts"
      ],
      " so that when the user first navigates to Tab 2 (the Photo Gallery), all photos are loaded and displayed on the screen."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token function"
            },
            "ngOnInit"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "photoService",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "loadSaved"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "That’s it! We’ve built a complete Photo Gallery feature in our Ionic app that works on the web. Next up, we’ll transform it into a mobile app for iOS and Android!"
    ]
  ],
  "title": "Loading Photos from the Filesystem",
  "headings": [
    {
      "text": "Storage API",
      "href": "#storage-api"
    }
  ],
  "pageClass": "page-angular-your-first-app-4-loading-photos"
}
