{
  "path": "/docs/angular/storage",
  "previousText": "Testing",
  "previousUrl": "/docs/angular/testing",
  "nextText": "Performance",
  "nextUrl": "/docs/angular/performance",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "There are variety of options available for storing data within an Ionic app."
    ],
    " ",
    [
      "h2",
      {
        "id": "ionic-offline-storage"
      },
      " ",
      [
        "a",
        {
          "href": "#ionic-offline-storage"
        },
        "Ionic Offline Storage"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "stencil-route-link",
        {
          "url": "/docs/enterprise/offline-storage"
        },
        "Ionic Offline Storage"
      ],
      " is a cross-platform data\nstorage system that works on iOS and Android.\nIt makes it easy to add offline storage to Ionic apps that is secure (encrypted on device),\nhighly performant, and provides advanced NoSQL data querying."
    ],
    " ",
    [
      "p",
      null,
      "Created for teams building complex, data-driven apps, apps managing sensitive data, or apps used in\nareas with unreliable cell service/internet connections.\nInterested? ",
      [
        "a",
        {
          "href": "https://ionicframework.com/offline-storage#get-started"
        },
        "Start here."
      ]
    ],
    " ",
    [
      "h2",
      {
        "id": "ionic-storage"
      },
      " ",
      [
        "a",
        {
          "href": "#ionic-storage"
        },
        "Ionic Storage"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Ionic Storage is a free, open source alternative for indie devs, students & hobbyists.\nIt provides an easy way to store key/value pairs and JSON objects."
    ],
    " ",
    [
      "p",
      null,
      "It uses a variety of storage engines underneath, picking the best one available\ndepending on the platform:"
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        "When running in a native app context, Storage will prioritize using SQLite, as it's one of\nthe most stable and widely used file-based databases, and avoids some of the\npitfalls of things like localstorage and IndexedDB, such as the OS deciding to clear out such\ndata in low disk-space situations."
      ],
      " ",
      [
        "li",
        null,
        "When running in the web or as a Progressive Web App, Storage will attempt to use\nIndexedDB, WebSQL, and localstorage, in that order."
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "usage"
      },
      " ",
      [
        "a",
        {
          "href": "#usage"
        },
        "Usage"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "First, if you'd like to use SQLite, install the cordova-sqlite-storage plugin:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "ionic cordova plugin ",
          [
            "span",
            {
              "class": "token function"
            },
            "add"
          ],
          " cordova-sqlite-storage"
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Next, install the package:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token function"
            },
            "npm"
          ],
          " ",
          [
            "span",
            {
              "class": "token function"
            },
            "install"
          ],
          " --save @ionic/storage"
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Next, add it to the imports list in your ",
      [
        "code",
        null,
        "NgModule"
      ],
      " declaration (for example, in ",
      [
        "code",
        null,
        "src/app/app.module.ts"
      ],
      "):"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " IonicStorageModule ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@ionic/storage'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "NgModule"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  declarations",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// ..."
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  imports",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "\n    BrowserModule",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    IonicModule",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "forRoot"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "MyApp",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n    IonicStorageModule",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "forRoot"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  bootstrap",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "IonicApp",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  entryComponents",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// ..."
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  providers",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// ..."
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "export"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "AppModule"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Finally, inject it into any of your components or pages:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " Storage ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@ionic/storage'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "export"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyApp"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "private"
            ],
            " storage",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " Storage"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// set a key/value"
          ],
          "\n  storage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "set"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'name'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'Max'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Or to get a key/value pair"
          ],
          "\n  storage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "get"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'age'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "then"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "val"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "log"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'Your age is'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " val",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "configuring-storage"
      },
      " ",
      [
        "a",
        {
          "href": "#configuring-storage"
        },
        "Configuring Storage"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "The Storage engine can be configured both with specific storage engine priorities, or custom configuration\noptions to pass to localForage. See the localForage config docs for possible options: ",
      [
        "a",
        {
          "href": "https://github.com/localForage/localForage#configuration"
        },
        "https://github.com/localForage/localForage#configuration"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Note: Any custom configurations will be merged with the default configuration"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " IonicStorageModule ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@ionic/storage'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "NgModule"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  declarations",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  imports",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "\n    IonicStorageModule",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "forRoot"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      name",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'__mydb'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\ndriverOrder",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'indexeddb'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'sqlite'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'websql'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  bootstrap",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  entryComponents",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n   providers",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "export"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "AppModule"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "instance-members"
      },
      " ",
      [
        "a",
        {
          "href": "#instance-members"
        },
        "Instance Members"
      ],
      " "
    ],
    " ",
    [
      "h4",
      {
        "id": "constructor"
      },
      " ",
      [
        "a",
        {
          "href": "#constructor"
        },
        "constructor"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Create a new Storage instance using the order of drivers and any additional config\noptions to pass to LocalForage."
    ],
    " ",
    [
      "p",
      null,
      "Possible driver options are: ['sqlite', 'indexeddb', 'websql', 'localstorage'] and the\ndefault is that exact ordering."
    ],
    " ",
    [
      "p",
      null,
      [
        "br",
        null
      ],
      [
        "br",
        null
      ]
    ],
    " ",
    [
      "h4",
      {
        "id": "driver"
      },
      " ",
      [
        "a",
        {
          "href": "#driver"
        },
        "driver"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Get the name of the driver being used."
    ],
    " ",
    [
      "p",
      null,
      [
        "br",
        null
      ],
      [
        "br",
        null
      ]
    ],
    " ",
    [
      "h4",
      {
        "id": "clear-"
      },
      " ",
      [
        "a",
        {
          "href": "#clear-"
        },
        "clear()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Clear the entire key value store. WARNING: HOT!"
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves when the store is cleared"
    ],
    " ",
    [
      "p",
      null,
      [
        "br",
        null
      ],
      [
        "br",
        null
      ]
    ],
    " ",
    [
      "h4",
      {
        "id": "foreach-"
      },
      " ",
      [
        "a",
        {
          "href": "#foreach-"
        },
        "forEach()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Iterate through each key,value pair."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves when the iteration has finished."
    ],
    " ",
    [
      "h4",
      null,
      "Parameters"
    ],
    " ",
    [
      "dl",
      null,
      [
        "dt",
        null,
        [
          "h5",
          null,
          "iteratorCallback"
        ]
      ],
      [
        "dd",
        null,
        "a callback of the form (value, key, iterationNumber)"
      ]
    ],
    [
      "br",
      null
    ],
    [
      "br",
      null
    ],
    " ",
    [
      "h4",
      {
        "id": "get-"
      },
      " ",
      [
        "a",
        {
          "href": "#get-"
        },
        "get()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Get the value associated with the given key."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise with the value of the given key"
    ],
    " ",
    [
      "h4",
      null,
      "Parameters"
    ],
    " ",
    [
      "dl",
      null,
      [
        "dt",
        null,
        [
          "h5",
          null,
          "key"
        ],
        [
          "strong",
          null,
          "Type:"
        ],
        " ",
        [
          "code",
          null,
          "string"
        ]
      ],
      [
        "dd",
        null,
        "the key to identify this value"
      ]
    ],
    [
      "br",
      null
    ],
    [
      "br",
      null
    ],
    " ",
    [
      "h4",
      {
        "id": "keys-"
      },
      " ",
      [
        "a",
        {
          "href": "#keys-"
        },
        "keys()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves with the keys in the store."
    ],
    " ",
    [
      "p",
      null,
      [
        "br",
        null
      ],
      [
        "br",
        null
      ]
    ],
    " ",
    [
      "h4",
      {
        "id": "length-"
      },
      " ",
      [
        "a",
        {
          "href": "#length-"
        },
        "length()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves with the number of keys stored."
    ],
    " ",
    [
      "p",
      null,
      [
        "br",
        null
      ],
      [
        "br",
        null
      ]
    ],
    " ",
    [
      "h4",
      {
        "id": "ready-"
      },
      " ",
      [
        "a",
        {
          "href": "#ready-"
        },
        "ready()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Reflect the readiness of the store."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves when the store is ready"
    ],
    " ",
    [
      "p",
      null,
      [
        "br",
        null
      ],
      [
        "br",
        null
      ]
    ],
    " ",
    [
      "h4",
      {
        "id": "remove-"
      },
      " ",
      [
        "a",
        {
          "href": "#remove-"
        },
        "remove()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Remove any value associated with this key."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves when the value is removed"
    ],
    " ",
    [
      "h4",
      null,
      "Parameters"
    ],
    " ",
    [
      "dl",
      null,
      [
        "dt",
        null,
        [
          "h5",
          null,
          "key"
        ],
        [
          "strong",
          null,
          "Type:"
        ],
        " ",
        [
          "code",
          null,
          "string"
        ]
      ],
      [
        "dd",
        null,
        "the key to identify this value"
      ]
    ],
    [
      "br",
      null
    ],
    [
      "br",
      null
    ],
    " ",
    [
      "h4",
      {
        "id": "set-"
      },
      " ",
      [
        "a",
        {
          "href": "#set-"
        },
        "set()"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Set the value for the given key."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " Returns a promise that resolves when the key and value are set"
    ],
    " ",
    [
      "h4",
      null,
      "Parameters"
    ],
    " ",
    [
      "dl",
      null,
      [
        "dt",
        null,
        [
          "h5",
          null,
          "key"
        ],
        [
          "strong",
          null,
          "Type:"
        ],
        " ",
        [
          "code",
          null,
          "string"
        ]
      ],
      [
        "dd",
        null,
        "the key to identify this value"
      ],
      [
        "dt",
        null,
        [
          "h5",
          null,
          "value"
        ],
        [
          "strong",
          null,
          "Type:"
        ],
        " ",
        [
          "code",
          null,
          "any"
        ]
      ],
      [
        "dd",
        null,
        "the value for this key"
      ]
    ],
    [
      "br",
      null
    ],
    [
      "br",
      null
    ]
  ],
  "title": "Data Storage",
  "headings": [
    {
      "text": "Ionic Offline Storage",
      "href": "#ionic-offline-storage"
    },
    {
      "text": "Ionic Storage",
      "href": "#ionic-storage"
    }
  ],
  "pageClass": "page-angular-storage"
}
