{
  "path": "/docs/troubleshooting/build",
  "previousText": "Remote Debugging",
  "previousUrl": "/docs/troubleshooting/debugging",
  "nextText": "Runtime Errors",
  "nextUrl": "/docs/troubleshooting/runtime",
  "disableHtmlPreviews": true,
  "contributors": [
    "brandyscarney"
  ],
  "body": [
    "div",
    null,
    [
      "h2",
      {
        "id": "common-mistakes"
      },
      " ",
      [
        "a",
        {
          "href": "#common-mistakes"
        },
        "Common mistakes"
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "forgetting-parentheses-on-a-decorator"
      },
      " ",
      [
        "a",
        {
          "href": "#forgetting-parentheses-on-a-decorator"
        },
        "Forgetting Parentheses on a Decorator"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Decorators should have parentheses ",
      [
        "code",
        null,
        "()"
      ],
      " after an annotation. Some examples include: ",
      [
        "code",
        null,
        "@Injectable()"
      ],
      ", ",
      [
        "code",
        null,
        "@Optional()"
      ],
      ", ",
      [
        "code",
        null,
        "@Input()"
      ],
      ", etc."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "@",
          [
            "span",
            {
              "class": "token function"
            },
            "Directive"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  selector",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'my-dir'"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyDirective"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Wrong, should be @Optional()"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// @Optional does nothing here, so MyDirective will error if parent is undefined"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          " ",
          [
            "span",
            {
              "class": "token parameter"
            },
            "@Optional parent",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " ParentComponent"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h2",
      {
        "id": "common-errors"
      },
      " ",
      [
        "a",
        {
          "href": "#common-errors"
        },
        "Common Errors"
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "cannot-resolve-all-parameters"
      },
      " ",
      [
        "a",
        {
          "href": "#cannot-resolve-all-parameters"
        },
        "Cannot Resolve all Parameters"
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "Cannot resolve all parameters ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'YourClass'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "?",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          ". Make sure that all the parameters are decorated with Inject or have valid ",
          [
            "span",
            {
              "class": "token builtin class-name"
            },
            "type"
          ],
          " annotations and that ",
          [
            "span",
            {
              "class": "token string"
            },
            "'YourClass'"
          ],
          " is decorated with Injectable."
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "This exception means that Angular is confused about one or more of the parameters for ",
      [
        "code",
        null,
        "YourClass"
      ],
      "'s constructor. In order to do ",
      [
        "a",
        {
          "href": "https://angular.io/docs/ts/latest/guide/dependency-injection.html"
        },
        "dependency injection"
      ],
      " Angular needs to know the type of the parameter to inject. You let Angular know this by specifying the class of the parameter. Make sure:"
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        "You are importing the parameter's class."
      ],
      " ",
      [
        "li",
        null,
        "You have properly annotated the parameter or specified its type."
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " MyService ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'my-service'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Don't forget to import me!"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "Component"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  template",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token template-string"
            },
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "Hello World"
            ],
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ]
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "export"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyClass"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// service is of type MyService"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "service",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " MyService"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Sometimes circular references within your code can cause this error. Circular references mean that two objects depend on each other, and so there is no way to declare both of them before each other. To get around this, we can use the ",
      [
        "a",
        {
          "href": "https://angular.io/docs/ts/latest/api/core/index/forwardRef-function.html"
        },
        [
          "code",
          null,
          "forwardRef"
        ]
      ],
      " function built in to Angular."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "ts"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " forwardRef ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@angular/core'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "Component"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  selector",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'my-button'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  template",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token template-string"
            },
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "<div>\n               <icon></icon>\n               <input type=\"button\" />\n             </div>"
            ],
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ]
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  directives",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "forwardRef"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " MyIcon",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// MyIcon has not been defined yet"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "                                       ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// forwardRef resolves as MyIcon when MyIcon is needed"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyButton"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "Directive"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  selector",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'icon'"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyIcon"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "containerButton",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " MyButton"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// MyButton has been defined"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "no-provider-for-paramtype"
      },
      " ",
      [
        "a",
        {
          "href": "#no-provider-for-paramtype"
        },
        "No provider for ParamType"
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "No provider ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ParamType",
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "MyClass -",
          [
            "span",
            {
              "class": "token operator"
            },
            ">"
          ],
          " ParamType",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "This means Angular knows the type of parameter it is supposed to inject, but it doesn't know how to inject it."
    ],
    " ",
    [
      "p",
      null,
      "If the parameter is a service, make sure you have added the specified class to the list of providers available to your app:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " MyService ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'my-service'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "Component"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  templateUrl",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'app/app.html'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  providers",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "MyService",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Don't forget me!"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyApp"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "If the parameter is another component or directive (for example, a parent component), adding it to your list of providers will make the error go away, but this will have the same effect as the ",
      [
        "a",
        {
          "href": "#multiple_instances"
        },
        "Multiple instances of a provider"
      ],
      " above. You'll be creating a new instance of the component class, and you won't get a reference to the component instance you want. Instead, make sure that the directive or component you expect to be injected is available to your component (e.g. that it is actually a parent if you are expecting it to be a parent). This is probably easiest understood with an example:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "@",
          [
            "span",
            {
              "class": "token function"
            },
            "Component"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  selector",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'my-comp'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  template",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'<p my-dir></p>'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  directives",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "forwardRef"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " MyDir",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyComp"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "name ",
          [
            "span",
            {
              "class": "token operator"
            },
            "="
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'My Component'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "Directive"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  selector",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'[my-dir]'"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyDir"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "c",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " MyComp"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// <-- This is the line of interest"
          ],
          "\n\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Errors when directive is on regular div because there is no MyComp in the"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// component tree so there is no MyComp to inject"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "log"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'Host component\\'s name: '"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          " c",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "name",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n@",
          [
            "span",
            {
              "class": "token function"
            },
            "Component"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  template",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "\"<my-comp></my-comp>\""
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// No error in MyDir constructor, MyComp is parent of MyDir"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "\"<my-comp my-dir></my-comp>\""
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// No error in MyDir constructor, MyComp is host of MyDir"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "\"<div my-dir></div>\""
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// Errors in MyDir constructor"
          ],
          "\n  directives",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "["
          ],
          "MyComp",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " MyDir",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "]"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyApp"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Here's a diagram illustrating what injectors are available:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "null"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "                 +-------+\n                 |  App  |\n                 +---+---+\n                     |\n       +-------------+------------+\n       |                          |\n+------+------+          +--------+--------+\n| Div (MyDir) |          | MyComp (MyDir)  |  <- MyComp can be injected\n+-------------+          +--------+--------+\n       ^                          |\nNo MyComp to inject        +------+------+\n                           | P (MyDir)   | <- MyComp can be injected from parent\n                           +-------------+"
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "To expand on the previous example, you can use the Angular ",
      [
        "code",
        null,
        "@Optional"
      ],
      " annotation if you don't always expect a component/directive reference:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "@",
          [
            "span",
            {
              "class": "token function"
            },
            "Directive"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  selector",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'[my-dir]'"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          "\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "class"
          ],
          " ",
          [
            "span",
            {
              "class": "token class-name"
            },
            "MyDir"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "@",
            [
              "span",
              {
                "class": "token function"
              },
              "Optional"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              "("
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ")"
            ],
            " c",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " MyComp"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// No longer errors if c is undefined"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "if"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "c",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n      ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "log"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token template-string"
            },
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ],
            [
              "span",
              {
                "class": "token string"
              },
              "Host component's name: "
            ],
            [
              "span",
              {
                "class": "token interpolation"
              },
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "${"
              ],
              "c",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "."
              ],
              "name",
              [
                "span",
                {
                  "class": "token interpolation-punctuation punctuation"
                },
                "}"
              ]
            ],
            [
              "span",
              {
                "class": "token template-punctuation string"
              },
              "`"
            ]
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "can-t-bind-to-propertyname-since-it-isn-t-a-known-property"
      },
      " ",
      [
        "a",
        {
          "href": "#can-t-bind-to-propertyname-since-it-isn-t-a-known-property"
        },
        "Can't bind to 'propertyName' since it isn't a known property"
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "Can",
          [
            "span",
            {
              "class": "token string"
            },
            "'t bind to '"
          ],
          "propertyName",
          [
            "span",
            {
              "class": "token string"
            },
            "' since it isn'"
          ],
          "t a known property of the ",
          [
            "span",
            {
              "class": "token string"
            },
            "'elementName'"
          ],
          " element and there are no matching directives with a corresponding property"
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "This happens when you try and bind a property on an element that doesn't have that property. If the element is a component or has one or more directives on it, neither the component nor the directives have that property either."
    ],
    " ",
    [
      "docs-code",
      {
        "language": "html"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token comment"
            },
            "<!-- div doesn't have a 'foo' property -->"
          ],
          "\n",
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "<"
              ],
              "div"
            ],
            " ",
            [
              "span",
              {
                "class": "token attr-name"
              },
              "[foo]"
            ],
            [
              "span",
              {
                "class": "token attr-value"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "="
              ],
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ],
              "bar",
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "\""
              ]
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ],
          [
            "span",
            {
              "class": "token tag"
            },
            [
              "span",
              {
                "class": "token tag"
              },
              [
                "span",
                {
                  "class": "token punctuation"
                },
                "</"
              ],
              "div"
            ],
            [
              "span",
              {
                "class": "token punctuation"
              },
              ">"
            ]
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "no-provider-for-controlcontainer"
      },
      " ",
      [
        "a",
        {
          "href": "#no-provider-for-controlcontainer"
        },
        "No provider for ControlContainer"
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "No provider ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ControlContainer",
          [
            "span",
            {
              "class": "token operator"
            },
            "!"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          "NgControlName -",
          [
            "span",
            {
              "class": "token operator"
            },
            ">"
          ],
          " ControlContainer",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "This error is a more specific version of the ",
      [
        "code",
        null,
        "No provider"
      ],
      " error above.  It happens when you use a form control like NgControlName without specifying a parent ",
      [
        "a",
        {
          "href": "https://angular.io/docs/ts/latest/api/forms/index/NgForm-directive.html"
        },
        "NgForm"
      ],
      " or NgFormModel.  In most cases, this can be resolved by making sure your form control is within an actual form element.  NgForm uses ",
      [
        "code",
        null,
        "form"
      ],
      " as a selector so this will instantiate a new NgForm:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "@",
          [
            "span",
            {
              "class": "token function"
            },
            "Component"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  template",
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "'<form>'"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "'<input ngControl=\"login\">'"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "+"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "'</form>'"
          ],
          "\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "no-component-factory-found"
      },
      " ",
      [
        "a",
        {
          "href": "#no-component-factory-found"
        },
        "No Component Factory Found"
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "shell"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "No component factory found ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "for"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "<"
          ],
          "component name",
          [
            "span",
            {
              "class": "token operator"
            },
            ">"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "This error happens when you are trying to use a component, provider pipe or directive that has not been imported and added to your ngModule. Whenever you add a new component, provider, pipe or directive to your app, you must add it to the ",
      [
        "code",
        null,
        "ngModule"
      ],
      " in the ",
      [
        "code",
        null,
        "src/app/app.module.ts"
      ],
      " file for Angular to be able to use it. To fix this error you can import the offending component, provider, pipe or directive into the app.module file and then if it is a provider add it to the ",
      [
        "code",
        null,
        "providers"
      ],
      " array and for a component, pipe or directive add it to both the declarations array and ",
      [
        "code",
        null,
        "entryComponents"
      ],
      " array."
    ]
  ],
  "title": "Build Errors",
  "headings": [
    {
      "text": "Common mistakes",
      "href": "#common-mistakes"
    },
    {
      "text": "Common Errors",
      "href": "#common-errors"
    }
  ],
  "pageClass": "page-troubleshooting-build"
}
