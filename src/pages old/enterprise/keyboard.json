{
  "path": "/docs/enterprise/keyboard",
  "title": "Keyboard",
  "template": "enterprise-plugin",
  "version": "2.2.0",
  "minor": "2.2.X",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "The Keyboard plugin allows you to configure the keyboard behavior (show/hide) and display (sizing/visibility)."
    ],
    " ",
    [
      "p",
      {
        "class": "intro"
      },
      [
        "native-ent-install",
        {
          "plugin-id": "keyboard",
          "variables": "",
          "capacitor-slug": "keyboard"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "preferences"
      },
      " ",
      [
        "a",
        {
          "href": "#preferences"
        },
        "Preferences"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "You can add the following preferences in your ",
      [
        "code",
        null,
        "config.xml"
      ],
      ":"
    ],
    " ",
    [
      "h4",
      {
        "id": "ios-only-preferences"
      },
      " ",
      [
        "a",
        {
          "href": "#ios-only-preferences"
        },
        "iOS Only Preferences"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "p",
          null,
          [
            "strong",
            null,
            "KeyboardResize"
          ],
          " (boolean, defaults to true). If ",
          [
            "code",
            null,
            "true"
          ],
          " Showing/hiding the keyboard will trigger some kind of resizing of the app (see KeyboardResizeMode). If ",
          [
            "code",
            null,
            "false"
          ],
          " Web will not be resized when the keyboard shows up."
        ],
        " ",
        [
          "docs-code",
          {
            "language": "null"
          },
          " ",
          [
            "pre",
            null,
            [
              "code",
              null,
              " <preference name=\"KeyboardResize\" value=\"true\" />"
            ]
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "li",
        null,
        [
          "p",
          null,
          [
            "strong",
            null,
            "KeyboardResizeMode"
          ],
          " (String, 'native' by default). Possible values:"
        ],
        " ",
        [
          "ul",
          null,
          " ",
          [
            "li",
            null,
            [
              "code",
              null,
              "native"
            ],
            ": The whole native webview will be resized when the keyboard shows/hides, it will affect the ",
            [
              "code",
              null,
              "vh"
            ],
            " relative unit."
          ],
          " ",
          [
            "li",
            null,
            [
              "code",
              null,
              "body"
            ],
            ": Only the html ",
            [
              "code",
              null,
              "<body>"
            ],
            " element will be resized. Relative units are not affected, because the viewport does not change."
          ],
          " ",
          [
            "li",
            null,
            [
              "code",
              null,
              "ionic"
            ],
            ": Only the html ",
            [
              "code",
              null,
              "ion-app"
            ],
            " element will be resized. Only for ionic apps."
          ],
          " "
        ],
        " "
      ],
      " "
    ],
    " ",
    [
      "docs-code",
      {
        "language": "null"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          "        <preference name=\"KeyboardResizeMode\" value=\"native\" />"
        ]
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "p",
          null,
          [
            "strong",
            null,
            "KeyboardStyle"
          ],
          " (String, 'light' by default). Possible values:"
        ],
        " ",
        [
          "ul",
          null,
          " ",
          [
            "li",
            null,
            [
              "p",
              null,
              [
                "code",
                null,
                "light"
              ]
            ],
            " "
          ],
          " ",
          [
            "li",
            null,
            [
              "p",
              null,
              [
                "code",
                null,
                "dark"
              ]
            ],
            " ",
            [
              "docs-code",
              {
                "language": "null"
              },
              " ",
              [
                "pre",
                null,
                [
                  "code",
                  null,
                  "  <preference name=\"KeyboardStyle\" value=\"dark\" />"
                ]
              ],
              " "
            ],
            " "
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "li",
        null,
        [
          "p",
          null,
          [
            "strong",
            null,
            "HideKeyboardFormAccessoryBar"
          ],
          " (boolean, defaults to true). If set to ",
          [
            "code",
            null,
            "true"
          ],
          " it hides the keyboard accessory bar. If set to ",
          [
            "code",
            null,
            "false"
          ],
          " it shows the keyboard accessory bar."
        ],
        " ",
        [
          "docs-code",
          {
            "language": "null"
          },
          " ",
          [
            "pre",
            null,
            [
              "code",
              null,
              " <preference name=\"HideKeyboardFormAccessoryBar\" value=\"false\" />"
            ]
          ],
          " "
        ],
        " "
      ],
      " "
    ],
    " ",
    [
      "h4",
      {
        "id": "android-only-preferences"
      },
      " ",
      [
        "a",
        {
          "href": "#android-only-preferences"
        },
        "Android Only Preferences"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "p",
          null,
          [
            "strong",
            null,
            "resizeOnFullScreen"
          ],
          " (boolean, defaults to false). There is an Android bug that prevents the keyboard from resizing the WebView when the app is in full screen (i.e. if StatusBar plugin is used to hide the StatusBar). This setting, if set to true, add a workaround that resizes the WebView even when the app is in full screen."
        ],
        " ",
        [
          "docs-code",
          {
            "language": "null"
          },
          " ",
          [
            "pre",
            null,
            [
              "code",
              null,
              " <preference name=\"resizeOnFullScreen\" value=\"true\" />"
            ]
          ],
          " "
        ],
        " "
      ],
      " "
    ],
    " ",
    [
      "h2",
      {
        "id": "index"
      },
      " ",
      [
        "a",
        {
          "href": "#index"
        },
        "Index"
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "enumerations"
      },
      " ",
      [
        "a",
        {
          "href": "#enumerations"
        },
        "Enumerations"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "a",
          {
            "href": "../#keyboardresizemode"
          },
          "KeyboardResizeMode"
        ]
      ],
      " ",
      [
        "li",
        null,
        [
          "a",
          {
            "href": "../#keyboardstyle"
          },
          "KeyboardStyle"
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "classes"
      },
      " ",
      [
        "a",
        {
          "href": "#classes"
        },
        "Classes"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "a",
          {
            "href": "../#keyboard"
          },
          "Keyboard"
        ]
      ],
      " "
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "h2",
      {
        "id": "enumerations"
      },
      " ",
      [
        "a",
        {
          "href": "#enumerations"
        },
        "Enumerations"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardresizemode"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "keyboardresizemode"
      },
      " ",
      [
        "a",
        {
          "href": "#keyboardresizemode"
        },
        "KeyboardResizeMode"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "KeyboardResizeMode"
      ],
      ": "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardresizemode.body"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "body"
      },
      " ",
      [
        "a",
        {
          "href": "#body"
        },
        "Body"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Body"
      ],
      ":  = \"body\""
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardresizemode.ionic"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "ionic"
      },
      " ",
      [
        "a",
        {
          "href": "#ionic"
        },
        "Ionic"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Ionic"
      ],
      ":  = \"ionic\""
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardresizemode.native"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "native"
      },
      " ",
      [
        "a",
        {
          "href": "#native"
        },
        "Native"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Native"
      ],
      ":  = \"native\""
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardresizemode.none"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "none"
      },
      " ",
      [
        "a",
        {
          "href": "#none"
        },
        "None"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "None"
      ],
      ":  = \"none\""
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardstyle"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "keyboardstyle"
      },
      " ",
      [
        "a",
        {
          "href": "#keyboardstyle"
        },
        "KeyboardStyle"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "KeyboardStyle"
      ],
      ": "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardstyle.dark"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "dark"
      },
      " ",
      [
        "a",
        {
          "href": "#dark"
        },
        "Dark"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Dark"
      ],
      ":  = \"dark\""
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboardstyle.light"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "light"
      },
      " ",
      [
        "a",
        {
          "href": "#light"
        },
        "Light"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Light"
      ],
      ":  = \"light\""
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "h2",
      {
        "id": "classes"
      },
      " ",
      [
        "a",
        {
          "href": "#classes"
        },
        "Classes"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "keyboard"
      },
      " ",
      [
        "a",
        {
          "href": "#keyboard"
        },
        "Keyboard"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Keyboard"
      ],
      ": "
    ],
    " ",
    [
      "p",
      null,
      [
        "em",
        null,
        [
          "strong",
          null,
          "name"
        ]
      ],
      ": Keyboard"
    ],
    " ",
    [
      "p",
      null,
      [
        "em",
        null,
        [
          "strong",
          null,
          "description"
        ]
      ],
      ": Keyboard plugin for Cordova."
    ],
    " ",
    [
      "p",
      null,
      [
        "em",
        null,
        [
          "strong",
          null,
          "usage"
        ]
      ],
      ":"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " Keyboard ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@ionic-enterprise/keyboard/ngx'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "private"
            ],
            " keyboard",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " Keyboard"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token operator"
            },
            "..."
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "keyboard",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "show"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "keyboard",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "hide"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n"
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.isvisible"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "isvisible"
      },
      " ",
      [
        "a",
        {
          "href": "#isvisible"
        },
        "isVisible"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "● isVisible"
      ],
      ": ",
      [
        "em",
        null,
        [
          "code",
          null,
          "boolean"
        ]
      ]
    ],
    " ",
    [
      "p",
      null,
      "Check keyboard status visible or not."
    ],
    " ",
    [
      "p",
      null,
      [
        "em",
        null,
        [
          "strong",
          null,
          "returns"
        ]
      ],
      ": "
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.disablescroll"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "disablescroll"
      },
      " ",
      [
        "a",
        {
          "href": "#disablescroll"
        },
        "disableScroll"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "disableScroll"
      ],
      "(disable: ",
      [
        "em",
        null,
        [
          "code",
          null,
          "boolean"
        ]
      ],
      "): ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Programatically enable or disable the WebView scroll"
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Parameters:"
      ]
    ],
    " ",
    [
      "table",
      null,
      " ",
      [
        "thead",
        null,
        " ",
        [
          "tr",
          null,
          " ",
          [
            "th",
            null,
            "Name"
          ],
          " ",
          [
            "th",
            null,
            "Type"
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "tbody",
        null,
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "disable"
          ],
          " ",
          [
            "td",
            null,
            [
              "code",
              null,
              "boolean"
            ]
          ],
          " "
        ],
        " "
      ]
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.hide"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "hide"
      },
      " ",
      [
        "a",
        {
          "href": "#hide"
        },
        "hide"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "hide"
      ],
      "(): ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Hide the keyboard if shown."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.hideformaccessorybar"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "hideformaccessorybar"
      },
      " ",
      [
        "a",
        {
          "href": "#hideformaccessorybar"
        },
        "hideFormAccessoryBar"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "hideFormAccessoryBar"
      ],
      "(hide: ",
      [
        "em",
        null,
        [
          "code",
          null,
          "boolean"
        ]
      ],
      "): ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Hide the keyboard accessory bar with the next, previous and done buttons."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Parameters:"
      ]
    ],
    " ",
    [
      "table",
      null,
      " ",
      [
        "thead",
        null,
        " ",
        [
          "tr",
          null,
          " ",
          [
            "th",
            null,
            "Name"
          ],
          " ",
          [
            "th",
            null,
            "Type"
          ],
          " ",
          [
            "th",
            null,
            "Description"
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "tbody",
        null,
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "hide"
          ],
          " ",
          [
            "td",
            null,
            [
              "code",
              null,
              "boolean"
            ]
          ],
          " ",
          [
            "td",
            null
          ],
          " "
        ],
        " "
      ]
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.onkeyboarddidhide"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "onkeyboarddidhide"
      },
      " ",
      [
        "a",
        {
          "href": "#onkeyboarddidhide"
        },
        "onKeyboardDidHide"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "onKeyboardDidHide"
      ],
      "(): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Creates an observable that notifies you when the keyboard did hide. Unsubscribe to observable to cancel event watch."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.onkeyboarddidshow"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "onkeyboarddidshow"
      },
      " ",
      [
        "a",
        {
          "href": "#onkeyboarddidshow"
        },
        "onKeyboardDidShow"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "onKeyboardDidShow"
      ],
      "(): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Creates an observable that notifies you when the keyboard did show. Unsubscribe to observable to cancel event watch."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.onkeyboardhide"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "onkeyboardhide"
      },
      " ",
      [
        "a",
        {
          "href": "#onkeyboardhide"
        },
        "onKeyboardHide"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "onKeyboardHide"
      ],
      "(): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Creates an observable that notifies you when the keyboard is hidden. Unsubscribe to observable to cancel event watch."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.onkeyboardshow"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "onkeyboardshow"
      },
      " ",
      [
        "a",
        {
          "href": "#onkeyboardshow"
        },
        "onKeyboardShow"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "onKeyboardShow"
      ],
      "(): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Creates an observable that notifies you when the keyboard is shown. Unsubscribe to observable to cancel event watch."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.onkeyboardwillhide"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "onkeyboardwillhide"
      },
      " ",
      [
        "a",
        {
          "href": "#onkeyboardwillhide"
        },
        "onKeyboardWillHide"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "onKeyboardWillHide"
      ],
      "(): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Creates an observable that notifies you when the keyboard will hide. Unsubscribe to observable to cancel event watch."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.onkeyboardwillshow"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "onkeyboardwillshow"
      },
      " ",
      [
        "a",
        {
          "href": "#onkeyboardwillshow"
        },
        "onKeyboardWillShow"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "onKeyboardWillShow"
      ],
      "(): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Creates an observable that notifies you when the keyboard will show. Unsubscribe to observable to cancel event watch."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "code",
        null,
        "any"
      ],
      ">"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.setkeyboardstyle"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "setkeyboardstyle"
      },
      " ",
      [
        "a",
        {
          "href": "#setkeyboardstyle"
        },
        "setKeyboardStyle"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "setKeyboardStyle"
      ],
      "(style: ",
      [
        "em",
        null,
        [
          "a",
          {
            "href": "../#keyboardstyle"
          },
          "KeyboardStyle"
        ]
      ],
      "): ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Programatically set Keyboard style"
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Parameters:"
      ]
    ],
    " ",
    [
      "table",
      null,
      " ",
      [
        "thead",
        null,
        " ",
        [
          "tr",
          null,
          " ",
          [
            "th",
            null,
            "Name"
          ],
          " ",
          [
            "th",
            null,
            "Type"
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "tbody",
        null,
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "style"
          ],
          " ",
          [
            "td",
            null,
            [
              "a",
              {
                "href": "../#keyboardstyle"
              },
              "KeyboardStyle"
            ]
          ],
          " "
        ],
        " "
      ]
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.setresizemode"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "setresizemode"
      },
      " ",
      [
        "a",
        {
          "href": "#setresizemode"
        },
        "setResizeMode"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "setResizeMode"
      ],
      "(mode: ",
      [
        "em",
        null,
        [
          "a",
          {
            "href": "../#keyboardresizemode"
          },
          "KeyboardResizeMode"
        ]
      ],
      "): ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Programatically set the resize mode"
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Parameters:"
      ]
    ],
    " ",
    [
      "table",
      null,
      " ",
      [
        "thead",
        null,
        " ",
        [
          "tr",
          null,
          " ",
          [
            "th",
            null,
            "Name"
          ],
          " ",
          [
            "th",
            null,
            "Type"
          ],
          " ",
          [
            "th",
            null,
            "Description"
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "tbody",
        null,
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "mode"
          ],
          " ",
          [
            "td",
            null,
            [
              "a",
              {
                "href": "../#keyboardresizemode"
              },
              "KeyboardResizeMode"
            ]
          ],
          " ",
          [
            "td",
            null
          ],
          " "
        ],
        " "
      ]
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "keyboard.show"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "show"
      },
      " ",
      [
        "a",
        {
          "href": "#show"
        },
        "show"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "show"
      ],
      "(): ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "p",
      null,
      "Force keyboard to be shown."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "void"
      ]
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "hr",
      null
    ],
    "  ",
    [
      "h2",
      {
        "id": "2-2-0-2019-09-03-"
      },
      " ",
      [
        "a",
        {
          "href": "#2-2-0-2019-09-03-"
        }
      ],
      [
        "a",
        {
          "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/compare/2.1.3...v2.2.0"
        },
        "2.2.0"
      ],
      " (2019-09-03) "
    ],
    " ",
    [
      "h3",
      {
        "id": "features"
      },
      " ",
      [
        "a",
        {
          "href": "#features"
        },
        "Features"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "windows:"
        ],
        " add windows implementation"
      ],
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "android:"
        ],
        " add resizeOnFullScreen preference for Android (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/106"
          },
          "#106"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/169c73c227ebb336af6bb3edb3ccfde536913338"
          },
          "169c73c"
        ],
        ")"
      ],
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "ios:"
        ],
        " Added Keyboard.setKeyboardStyle method (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/79"
          },
          "#79"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/4c03a7e0ca6821fa823128cc5e7544437932d67c"
          },
          "4c03a7e"
        ],
        ")"
      ],
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "ios:"
        ],
        " reimplement disableScroll method (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/102"
          },
          "#102"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/b33e7a29909e51c7bff95851925f97edd5164cb7"
          },
          "b33e7a2"
        ],
        ")"
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "bug-fixes"
      },
      " ",
      [
        "a",
        {
          "href": "#bug-fixes"
        },
        "Bug Fixes"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "android:"
        ],
        " Avoid conflicts when ionic-plugin-keyboard is installed (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/104"
          },
          "#104"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/893dc8e230a792b1b7a6d433e5db74a3e1022486"
          },
          "893dc8e"
        ],
        ")"
      ],
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "ios:"
        ],
        " respect KeyboardAppearanceDark preference from webview plugin (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/101"
          },
          "#101"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/b00e3a92b3f8ecb31e9914d4abda503a332249d0"
          },
          "b00e3a9"
        ],
        ")"
      ],
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "ios:"
        ],
        " Delay resize until keyboard animation finish (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/81"
          },
          "#81"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/d729cbf314eba47cb3fdfb56bc2df27305828738"
          },
          "d729cbf"
        ],
        ")"
      ],
      " ",
      [
        "li",
        null,
        [
          "strong",
          null,
          "ios:"
        ],
        " Avoid duplicate hide event when user changes field (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/issues/68"
          },
          "#68"
        ],
        ") (",
        [
          "a",
          {
            "href": "https://github.com/ionic-team/cordova-plugin-ionic-keyboard/commit/4a0e0182822253427e1df12246252798dbe0a496"
          },
          "4a0e018"
        ],
        ")"
      ],
      " "
    ]
  ],
  "headings": [
    {
      "text": "Index",
      "href": "#index"
    },
    {
      "text": "Enumerations",
      "href": "#enumerations"
    },
    {
      "text": "Classes",
      "href": "#classes"
    },
    {
      "text": "2.2.0 (2019-09-03)",
      "href": "#2-2-0-2019-09-03-"
    }
  ],
  "pageClass": "page-enterprise-keyboard"
}
