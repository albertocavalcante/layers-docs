{
  "path": "/docs/enterprise/deeplinks",
  "title": "Deep Links",
  "template": "enterprise-plugin",
  "version": "1.0.21",
  "minor": "1.0.X",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "The Deep Links plugin provides deep linking support for both Android App Links and iOS Universal Links. "
    ],
    " ",
    [
      "p",
      {
        "class": "intro"
      },
      "Deep links point to a page inside of a mobile app. For example, if you had an online store selling products, upon navigating to a website link (",
      [
        "a",
        {
          "href": "https://yoursite.com/product/cool-beans"
        },
        "https://yoursite.com/product/cool-beans"
      ],
      ") the app could open and navigate to display the Cool Beans product."
    ],
    " ",
    [
      "p",
      {
        "class": "intro"
      },
      "The mobile app can also be opened directly to the Cool Beans product page using a custom URL scheme, like ",
      [
        "code",
        null,
        "coolbeans://product/cool-beans"
      ],
      "."
    ],
    " ",
    [
      "p",
      {
        "class": "intro"
      },
      [
        "native-ent-install",
        {
          "plugin-id": "deeplinks",
          "variables": ""
        }
      ]
    ],
    " ",
    [
      "h2",
      {
        "id": "index"
      },
      " ",
      [
        "a",
        {
          "href": "#index"
        },
        "Index"
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "classes"
      },
      " ",
      [
        "a",
        {
          "href": "#classes"
        },
        "Classes"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "a",
          {
            "href": "#deeplinks"
          },
          "Deeplinks"
        ]
      ],
      " "
    ],
    " ",
    [
      "h3",
      {
        "id": "interfaces"
      },
      " ",
      [
        "a",
        {
          "href": "#interfaces"
        },
        "Interfaces"
      ],
      " "
    ],
    " ",
    [
      "ul",
      null,
      " ",
      [
        "li",
        null,
        [
          "a",
          {
            "href": "#deeplinkmatch"
          },
          "DeeplinkMatch"
        ]
      ],
      " ",
      [
        "li",
        null,
        [
          "a",
          {
            "href": "#deeplinkoptions"
          },
          "DeeplinkOptions"
        ]
      ],
      " "
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "h2",
      {
        "id": "classes"
      },
      " ",
      [
        "a",
        {
          "href": "#classes"
        },
        "Classes"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinks"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "deeplinks"
      },
      " ",
      [
        "a",
        {
          "href": "#deeplinks"
        },
        "Deeplinks"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Deeplinks"
      ],
      ": "
    ],
    " ",
    [
      "p",
      null,
      "Please read the ",
      [
        "a",
        {
          "href": "https://github.com/ionic-team/ionic-plugin-deeplinks"
        },
        "ionic plugin deeplinks docs"
      ],
      " for iOS and Android integration. You must add ",
      [
        "code",
        null,
        "universal-links"
      ],
      " to your ",
      [
        "code",
        null,
        "config.xml"
      ],
      " and set up Apple App Site Association (AASA) for iOS and Asset Links for Android."
    ],
    " ",
    [
      "p",
      null,
      [
        "em",
        null,
        [
          "strong",
          null,
          "usage"
        ]
      ],
      ":"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "import"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " Deeplinks ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          " ",
          [
            "span",
            {
              "class": "token keyword"
            },
            "from"
          ],
          " ",
          [
            "span",
            {
              "class": "token string"
            },
            "'@ionic-enterprise/deeplinks/ngx'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "constructor"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            [
              "span",
              {
                "class": "token keyword"
              },
              "private"
            ],
            " deeplinks",
            [
              "span",
              {
                "class": "token operator"
              },
              ":"
            ],
            " Deeplinks"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          "\n\n",
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "deeplinks",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "route"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token string"
            },
            "'/about-us'"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " AboutPage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token string"
            },
            "'/universal-links-test'"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " AboutPage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token string"
            },
            "'/products/:productId'"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ProductPage\n   ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "subscribe"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "match"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// match.$route - the route we matched, which is the matched entry from the arguments to route()"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// match.$args - the args passed in the link"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// match.$link - the full link data"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "log"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'Successfully matched route'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " match",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n   ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token parameter"
            },
            "nomatch"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// nomatch.$link - the full link data"
          ],
          "\n     ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "error"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'Got a deeplink that didn\\'t match'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " nomatch",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n   ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "Alternatively, if you're using Ionic, there's a convenience method that takes a reference to a ",
      [
        "code",
        null,
        "NavController"
      ],
      " and handles the actual navigation for you:"
    ],
    " ",
    [
      "docs-code",
      {
        "language": "typescript"
      },
      " ",
      [
        "pre",
        null,
        [
          "code",
          null,
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "deeplinks",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "routeWithNavController"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token keyword"
            },
            "this"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          "navController",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "'/about-us'"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " AboutPage",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token string"
            },
            "'/products/:productId'"
          ],
          [
            "span",
            {
              "class": "token operator"
            },
            ":"
          ],
          " ProductPage\n",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "subscribe"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token parameter"
            },
            "match"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// match.$route - the route we matched, which is the matched entry from the arguments to route()"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// match.$args - the args passed in the link"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// match.$link - the full link data"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "log"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'Successfully matched route'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " match",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " ",
          [
            "span",
            {
              "class": "token parameter"
            },
            "nomatch"
          ],
          " ",
          [
            "span",
            {
              "class": "token operator"
            },
            "=>"
          ],
          " ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "{"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token comment"
            },
            "// nomatch.$link - the full link data"
          ],
          "\n    ",
          [
            "span",
            {
              "class": "token builtin"
            },
            "console"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "."
          ],
          [
            "span",
            {
              "class": "token function"
            },
            "error"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            "("
          ],
          [
            "span",
            {
              "class": "token string"
            },
            "'Got a deeplink that didn\\'t match'"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ","
          ],
          " nomatch",
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ],
          "\n  ",
          [
            "span",
            {
              "class": "token punctuation"
            },
            "}"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ")"
          ],
          [
            "span",
            {
              "class": "token punctuation"
            },
            ";"
          ]
        ]
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "See the ",
      [
        "a",
        {
          "href": "https://github.com/ionic-team/ionic2-deeplinks-demo/blob/master/app/app.ts"
        },
        "Ionic Deeplinks Demo"
      ],
      " for an example of how to retrieve the ",
      [
        "code",
        null,
        "NavController"
      ],
      " reference at runtime."
    ],
    " ",
    [
      "p",
      null,
      [
        "em",
        null,
        [
          "strong",
          null,
          "interfaces"
        ]
      ],
      ": DeeplinkMatch"
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinks.route"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "route"
      },
      " ",
      [
        "a",
        {
          "href": "#route"
        },
        "route"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "route"
      ],
      "(paths: ",
      [
        "em",
        null,
        [
          "code",
          null,
          "any"
        ]
      ],
      "): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "a",
        {
          "href": "#deeplinkmatch"
        },
        "DeeplinkMatch"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "Define a set of paths to match against incoming deeplinks."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Parameters:"
      ]
    ],
    " ",
    [
      "table",
      null,
      " ",
      [
        "thead",
        null,
        " ",
        [
          "tr",
          null,
          " ",
          [
            "th",
            null,
            "Name"
          ],
          " ",
          [
            "th",
            null,
            "Type"
          ],
          " ",
          [
            "th",
            null,
            "Description"
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "tbody",
        null,
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "paths"
          ],
          " ",
          [
            "td",
            null,
            [
              "code",
              null,
              "any"
            ]
          ],
          " ",
          [
            "td",
            null,
            "Define a set of paths to match against incoming deeplinks. paths takes an object of the form { 'path': data }. If a deeplink matches the path, the resulting path-data pair will be returned in the promise result which you can then use to navigate in the app as you see fit."
          ],
          " "
        ],
        " "
      ]
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "a",
        {
          "href": "#deeplinkmatch"
        },
        "DeeplinkMatch"
      ],
      ">\nReturns an Observable that is called each time a deeplink comes through, and\nerrors if a deeplink comes through that does not match a given path."
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinks.routewithnavcontroller"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "routewithnavcontroller"
      },
      " ",
      [
        "a",
        {
          "href": "#routewithnavcontroller"
        },
        "routeWithNavController"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      "▸ ",
      [
        "strong",
        null,
        "routeWithNavController"
      ],
      "(navController: ",
      [
        "em",
        null,
        [
          "code",
          null,
          "any"
        ]
      ],
      ", paths: ",
      [
        "em",
        null,
        [
          "code",
          null,
          "any"
        ]
      ],
      ", options?: ",
      [
        "em",
        null,
        [
          "a",
          {
            "href": "#deeplinkoptions"
          },
          "DeeplinkOptions"
        ]
      ],
      "): ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "a",
        {
          "href": "#deeplinkmatch"
        },
        "DeeplinkMatch"
      ],
      ">"
    ],
    " ",
    [
      "p",
      null,
      "This is a convenience version of ",
      [
        "code",
        null,
        "route"
      ],
      " that takes a reference to a NavController from Ionic, or a custom class that conforms to this protocol:"
    ],
    " ",
    [
      "p",
      null,
      "NavController.push = function(View, Params){}"
    ],
    " ",
    [
      "p",
      null,
      "This handler will automatically navigate when a route matches. If you need finer-grained control over the behavior of a matching deeplink, use the plain ",
      [
        "code",
        null,
        "route"
      ],
      " method."
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Parameters:"
      ]
    ],
    " ",
    [
      "table",
      null,
      " ",
      [
        "thead",
        null,
        " ",
        [
          "tr",
          null,
          " ",
          [
            "th",
            null,
            "Name"
          ],
          " ",
          [
            "th",
            null,
            "Type"
          ],
          " ",
          [
            "th",
            null,
            "Description"
          ],
          " "
        ],
        " "
      ],
      " ",
      [
        "tbody",
        null,
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "navController"
          ],
          " ",
          [
            "td",
            null,
            [
              "code",
              null,
              "any"
            ]
          ],
          " ",
          [
            "td",
            null,
            "Define a set of paths to match against incoming deeplinks. paths takes an object of the form { 'path': data }. If a deeplink matches the path, the resulting path-data pair will be returned in the promise result which you can then use to navigate in the app as you see fit."
          ],
          " "
        ],
        " ",
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            "paths"
          ],
          " ",
          [
            "td",
            null,
            [
              "code",
              null,
              "any"
            ]
          ],
          " ",
          [
            "td",
            null
          ],
          " "
        ],
        " ",
        [
          "tr",
          null,
          " ",
          [
            "td",
            null,
            [
              "code",
              null,
              "Optional"
            ],
            " options"
          ],
          " ",
          [
            "td",
            null,
            [
              "a",
              {
                "href": "#deeplinkoptions"
              },
              "DeeplinkOptions"
            ]
          ],
          " ",
          [
            "td",
            null
          ],
          " "
        ],
        " "
      ]
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "Returns:"
      ],
      " ",
      [
        "code",
        null,
        "Observable"
      ],
      "<",
      [
        "a",
        {
          "href": "#deeplinkmatch"
        },
        "DeeplinkMatch"
      ],
      ">\nReturns an Observable that resolves each time a deeplink comes through, and\nerrors if a deeplink comes through that does not match a given path."
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "h2",
      {
        "id": "interfaces"
      },
      " ",
      [
        "a",
        {
          "href": "#interfaces"
        },
        "Interfaces"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinkmatch"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "deeplinkmatch"
      },
      " ",
      [
        "a",
        {
          "href": "#deeplinkmatch"
        },
        "DeeplinkMatch"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "DeeplinkMatch"
      ],
      ": "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinkmatch._args"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "-args"
      },
      " ",
      [
        "a",
        {
          "href": "#-args"
        },
        "$args"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "● $args"
      ],
      ": ",
      [
        "em",
        null,
        [
          "code",
          null,
          "any"
        ]
      ]
    ],
    " ",
    [
      "p",
      null,
      "Any arguments passed either through route parameters or GET parameters"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinkmatch._link"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "-link"
      },
      " ",
      [
        "a",
        {
          "href": "#-link"
        },
        "$link"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "● $link"
      ],
      ": ",
      [
        "em",
        null,
        [
          "code",
          null,
          "any"
        ]
      ]
    ],
    " ",
    [
      "p",
      null,
      "The deeplink object processed from the plugin, along with any any internal native data available as \"extras\" at the time the route was matched (for example, Facebook sometimes adds extra data)"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinkmatch._route"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "-route"
      },
      " ",
      [
        "a",
        {
          "href": "#-route"
        },
        "$route"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "● $route"
      ],
      ": ",
      [
        "em",
        null,
        [
          "code",
          null,
          "any"
        ]
      ]
    ],
    " ",
    [
      "p",
      null,
      "The route info for the matched route"
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinkoptions"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "deeplinkoptions"
      },
      " ",
      [
        "a",
        {
          "href": "#deeplinkoptions"
        },
        "DeeplinkOptions"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "DeeplinkOptions"
      ],
      ": "
    ],
    " ",
    [
      "p",
      null,
      [
        "a",
        {
          "id": "deeplinkoptions.root"
        }
      ]
    ],
    " ",
    [
      "h3",
      {
        "id": "root"
      },
      " ",
      [
        "a",
        {
          "href": "#root"
        },
        "root"
      ],
      " "
    ],
    " ",
    [
      "p",
      null,
      [
        "strong",
        null,
        "● root"
      ],
      ": ",
      [
        "em",
        null,
        [
          "code",
          null,
          "boolean"
        ]
      ]
    ],
    " ",
    [
      "p",
      null,
      "Set the matched route as root page using ",
      [
        "code",
        null,
        "navCtrl.setRoot()"
      ],
      " method."
    ],
    " ",
    [
      "hr",
      null
    ],
    " ",
    [
      "hr",
      null
    ]
  ],
  "headings": [
    {
      "text": "Index",
      "href": "#index"
    },
    {
      "text": "Classes",
      "href": "#classes"
    },
    {
      "text": "Interfaces",
      "href": "#interfaces"
    }
  ],
  "pageClass": "page-enterprise-deeplinks"
}
