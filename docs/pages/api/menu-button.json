{
  "title": "ion-menu-button",
  "path": "/docs/api/menu-button",
  "body": [
    "div",
    null,
    [
      "p",
      {
        "class": "intro"
      },
      "Menu Button is component that automatically creates the icon and functionality to open a menu on a page."
    ]
  ],
  "usage": {},
  "props": [
    {
      "name": "autoHide",
      "type": "boolean",
      "mutable": false,
      "attr": "auto-hide",
      "reflectToAttr": false,
      "docs": "<p>Automatically hides the menu button when the corresponding menu is not active</p>\n",
      "docsTags": [],
      "default": "true",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "color",
      "type": "string | undefined",
      "mutable": false,
      "attr": "color",
      "reflectToAttr": false,
      "docs": "<p>The color to use from your application&#39;s color palette.\nDefault options are: <code>&quot;primary&quot;</code>, <code>&quot;secondary&quot;</code>, <code>&quot;tertiary&quot;</code>, <code>&quot;success&quot;</code>, <code>&quot;warning&quot;</code>, <code>&quot;danger&quot;</code>, <code>&quot;light&quot;</code>, <code>&quot;medium&quot;</code>, and <code>&quot;dark&quot;</code>.\nFor more information on colors, see <stencil-route-link url=/docs/theming/basics >theming</stencil-route-link>.</p>\n",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "disabled",
      "type": "boolean",
      "mutable": false,
      "attr": "disabled",
      "reflectToAttr": false,
      "docs": "<p>If <code>true</code>, the user cannot interact with the menu button.</p>\n",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    },
    {
      "name": "menu",
      "type": "string | undefined",
      "mutable": false,
      "attr": "menu",
      "reflectToAttr": false,
      "docs": "<p>Optional property that maps to a Menu&#39;s <code>menuId</code> prop. Can also be <code>start</code> or <code>end</code> for the menu side. This is used to find the correct menu to toggle</p>\n",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "type",
      "type": "\"button\" | \"reset\" | \"submit\"",
      "mutable": false,
      "attr": "type",
      "reflectToAttr": false,
      "docs": "<p>The type of the button.</p>\n",
      "docsTags": [],
      "default": "'button'",
      "values": [
        {
          "value": "button",
          "type": "string"
        },
        {
          "value": "reset",
          "type": "string"
        },
        {
          "value": "submit",
          "type": "string"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "template": "api",
  "filePath": "./src/components/menu-button/menu-button.tsx",
  "encapsulation": "shadow",
  "tag": "ion-menu-button",
  "docs": [
    "div",
    null,
    "Menu Button is component that automatically creates the icon and functionality to open a menu on a page."
  ],
  "docsTags": [],
  "events": [],
  "listeners": [
    {
      "event": "ionMenuChange",
      "target": "body",
      "capture": false,
      "passive": false
    },
    {
      "event": "ionSplitPaneVisible",
      "target": "body",
      "capture": false,
      "passive": false
    }
  ],
  "styles": [
    {
      "name": "--background",
      "annotation": "prop",
      "docs": "Background of the menu button"
    },
    {
      "name": "--background-focused",
      "annotation": "prop",
      "docs": "Background of the menu button when focused with the tab key"
    },
    {
      "name": "--background-focused-opacity",
      "annotation": "prop",
      "docs": "Opacity of the menu button background when focused with the tab key"
    },
    {
      "name": "--background-hover",
      "annotation": "prop",
      "docs": "Background of the menu button on hover"
    },
    {
      "name": "--background-hover-opacity",
      "annotation": "prop",
      "docs": "Opacity of the background on hover"
    },
    {
      "name": "--border-radius",
      "annotation": "prop",
      "docs": "Border radius of the menu button"
    },
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Color of the menu button"
    },
    {
      "name": "--color-focused",
      "annotation": "prop",
      "docs": "Color of the menu button when focused with the tab key"
    },
    {
      "name": "--color-hover",
      "annotation": "prop",
      "docs": "Color of the menu button on hover"
    },
    {
      "name": "--padding-bottom",
      "annotation": "prop",
      "docs": "Bottom padding of the button"
    },
    {
      "name": "--padding-end",
      "annotation": "prop",
      "docs": "Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button"
    },
    {
      "name": "--padding-start",
      "annotation": "prop",
      "docs": "Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button"
    },
    {
      "name": "--padding-top",
      "annotation": "prop",
      "docs": "Top padding of the button"
    }
  ],
  "slots": [],
  "dependents": [],
  "dependencies": [
    "ion-icon",
    "ion-ripple-effect"
  ],
  "dependencyGraph": {
    "ion-menu-button": [
      "ion-icon",
      "ion-ripple-effect"
    ]
  },
  "headings": [],
  "pageClass": "page-api-menu-button"
}
